// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/mmbot.proto

package mmbot

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Vba struct {
	Vba                  string   `protobuf:"bytes,1,opt,name=vba,proto3" json:"vba,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vba) Reset()         { *m = Vba{} }
func (m *Vba) String() string { return proto.CompactTextString(m) }
func (*Vba) ProtoMessage()    {}
func (*Vba) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b3010dc415494c9, []int{0}
}

func (m *Vba) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vba.Unmarshal(m, b)
}
func (m *Vba) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vba.Marshal(b, m, deterministic)
}
func (m *Vba) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vba.Merge(m, src)
}
func (m *Vba) XXX_Size() int {
	return xxx_messageInfo_Vba.Size(m)
}
func (m *Vba) XXX_DiscardUnknown() {
	xxx_messageInfo_Vba.DiscardUnknown(m)
}

var xxx_messageInfo_Vba proto.InternalMessageInfo

func (m *Vba) GetVba() string {
	if m != nil {
		return m.Vba
	}
	return ""
}

type Prediction struct {
	Prediction           string   `protobuf:"bytes,1,opt,name=prediction,proto3" json:"prediction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Prediction) Reset()         { *m = Prediction{} }
func (m *Prediction) String() string { return proto.CompactTextString(m) }
func (*Prediction) ProtoMessage()    {}
func (*Prediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b3010dc415494c9, []int{1}
}

func (m *Prediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prediction.Unmarshal(m, b)
}
func (m *Prediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prediction.Marshal(b, m, deterministic)
}
func (m *Prediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prediction.Merge(m, src)
}
func (m *Prediction) XXX_Size() int {
	return xxx_messageInfo_Prediction.Size(m)
}
func (m *Prediction) XXX_DiscardUnknown() {
	xxx_messageInfo_Prediction.DiscardUnknown(m)
}

var xxx_messageInfo_Prediction proto.InternalMessageInfo

func (m *Prediction) GetPrediction() string {
	if m != nil {
		return m.Prediction
	}
	return ""
}

func init() {
	proto.RegisterType((*Vba)(nil), "Vba")
	proto.RegisterType((*Prediction)(nil), "Prediction")
}

func init() { proto.RegisterFile("api/mmbot.proto", fileDescriptor_7b3010dc415494c9) }

var fileDescriptor_7b3010dc415494c9 = []byte{
	// 123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x2c, 0xc8, 0xd4,
	0xcf, 0xcd, 0x4d, 0xca, 0x2f, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x12, 0xe7, 0x62, 0x0e,
	0x4b, 0x4a, 0x14, 0x12, 0xe0, 0x62, 0x2e, 0x4b, 0x4a, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x02, 0x31, 0x95, 0x74, 0xb8, 0xb8, 0x02, 0x8a, 0x52, 0x53, 0x32, 0x93, 0x4b, 0x32, 0xf3, 0xf3,
	0x84, 0xe4, 0xb8, 0xb8, 0x0a, 0xe0, 0x3c, 0xa8, 0x32, 0x24, 0x11, 0x23, 0x75, 0x2e, 0x56, 0x5f,
	0x90, 0xa9, 0x42, 0x72, 0x5c, 0xec, 0xc1, 0xa9, 0x79, 0x29, 0x20, 0x33, 0x59, 0xf4, 0xc2, 0x92,
	0x12, 0xa5, 0xb8, 0xf5, 0x10, 0xc6, 0x28, 0x31, 0x24, 0xb1, 0x81, 0xad, 0x35, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x1b, 0x99, 0x1f, 0x52, 0x89, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MmbotClient is the client API for Mmbot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MmbotClient interface {
	SendVba(ctx context.Context, in *Vba, opts ...grpc.CallOption) (*Prediction, error)
}

type mmbotClient struct {
	cc *grpc.ClientConn
}

func NewMmbotClient(cc *grpc.ClientConn) MmbotClient {
	return &mmbotClient{cc}
}

func (c *mmbotClient) SendVba(ctx context.Context, in *Vba, opts ...grpc.CallOption) (*Prediction, error) {
	out := new(Prediction)
	err := c.cc.Invoke(ctx, "/Mmbot/SendVba", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MmbotServer is the server API for Mmbot service.
type MmbotServer interface {
	SendVba(context.Context, *Vba) (*Prediction, error)
}

func RegisterMmbotServer(s *grpc.Server, srv MmbotServer) {
	s.RegisterService(&_Mmbot_serviceDesc, srv)
}

func _Mmbot_SendVba_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Vba)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MmbotServer).SendVba(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Mmbot/SendVba",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MmbotServer).SendVba(ctx, req.(*Vba))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mmbot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Mmbot",
	HandlerType: (*MmbotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendVba",
			Handler:    _Mmbot_SendVba_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/mmbot.proto",
}
